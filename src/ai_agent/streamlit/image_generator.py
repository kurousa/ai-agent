import base64
import streamlit as st
from langchain.chat_models import ChatOpenAI
from langchain_community.utilities.dalle_image_generator import DallEAPIWrapper

try:
    from dotenv import load_dotenv

    load_dotenv()
    # [debug]check envs
    # import os

    # environment_variables = os.environ
    # for key, value in environment_variables.items():
    #     print(f"{key}={value}")
except ImportError:
    import warnings

    warnings.warn(
        "dotenv not found. Please make sure to set your environment variables manually.",
        ImportWarning,
    )


GPT4V_PROMPT = """
- ユーザーのリクエストとアップロードされた画像を注意深く確認してください。
- アップロードされた画像に基づいて、ユーザーのリクエストに沿ったDALL-Eのプロンプトを生成してください。
    - 生成するプロンプトは、DALL-E3向けに必ず英語で作成すること

ユーザー入力: {user_input}

- プロンプトでは、ユーザーがアップロードした画像に何が描かれているか、どのような構成かを詳細に説明してください。
- 被写体がはっきり見える場合、場所や人物を特定することができる場合は、具体的に記述してください。
- 画像の構図やスタイルについても言及してください。
- 画像の内容を可能な限り正確に再現することを最優先で考慮してください。

DALL-E 3向けプロンプトを英語で作成してください:
"""


def init_page():
    st.set_page_config(page_title="Image Generator")
    st.header("Image Generator")


def main():
    init_page()

    llm = ChatOpenAI(
        temperature=0,
        model="gpt-4o",
        max_tokens=512,
    )
    dalle3_image_url = None
    upload_file = st.file_uploader(
        label="Upload an image",
        type=["jpg", "jpeg", "png"],
    )
    if upload_file:
        if user_input := st.text_input("Enter how you would like to process the image"):
            image_base64 = base64.b64encode(upload_file.read()).decode()
            image = f"data:image/jpeg;base64,{image_base64}"

            query = [
                (
                    "user",
                    [
                        {
                            "type": "text",
                            "text": GPT4V_PROMPT.format(user_input=user_input),
                        },
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": image,
                                "detail": "auto",
                            },
                        },
                    ],
                )
            ]

            st.markdown("### Image Prompt by GPT-4V")
            image_prompt = st.write_stream(llm.stream(query))

            with st.spinner("Generating image..."):
                dalle3 = DallEAPIWrapper(
                    model="dall-e-3",
                    size="1024x1024",
                    quality="standard",
                    n=1,
                )
                dalle3_image_url = dalle3.run(image_prompt)
    else:
        st.write("Please upload an image file.")

    if dalle3_image_url:
        st.markdown("### Generated Image")
        st.write(user_input)
        st.image(upload_file, use_column_width="auto")

        st.markdown("### Generated Image by DALL-E 3")
        st.image(
            dalle3_image_url,
            caption="Generated by DALL-E 3",
            use_column_width="auto",
        )


if __name__ == "__main__":
    main()
